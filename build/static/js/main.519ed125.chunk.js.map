{"version":3,"sources":["Filter.js","Person.js","Persons.js","Form.js","Notification.js","services/REST.js","App.js","index.js"],"names":["Filter","value","onChangeHandler","onChange","Person","person","deleteHandler","name","number","onClick","id","Persons","search","persons","deletePerson","filter","toLowerCase","includes","map","Form","onSumbitHandler","nameValue","onNameChange","numberValue","onNumberChange","onSubmit","type","Notification","message","success","classProp","className","baseURL","axios","get","post","delete","put","App","useState","setPersons","useEffect","rest","then","response","data","newName","setNewName","newNumber","setNewNumber","setSearch","setMessage","event","target","preventDefault","find","alert","window","confirm","edittedPerson","p","catch","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"oLAUeA,EARA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBACrB,OACI,iDACkB,uBAAOD,MAAOA,EAAOE,SAAUD,QCI1CE,EAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,cAAX,OACX,gCACKD,EAAOE,KADZ,IACmBF,EAAOG,OAAQ,IAC9B,wBAAQC,QAAS,kBAAMH,EAAcD,EAAOK,KAA5C,wBCkBOC,EApBC,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAChC,OACI,8BACKD,EACIE,QAAO,SAACV,GACL,OAAOA,EAAOE,KACTS,cACAC,SAASL,EAAOI,kBAExBE,KAAI,SAACb,GAAD,OACD,cAAC,EAAD,CAEIA,OAAQA,EACRC,cAAeQ,GAFVT,EAAOE,YCQrBY,EApBF,SAAC,GAAD,IACTC,EADS,EACTA,gBACAC,EAFS,EAETA,UACAC,EAHS,EAGTA,aACAC,EAJS,EAITA,YACAC,EALS,EAKTA,eALS,OAOT,uBAAMC,SAAUL,EAAhB,UACI,yCACU,uBAAOnB,MAAOoB,EAAWlB,SAAUmB,OAE7C,2CACY,uBAAOrB,MAAOsB,EAAapB,SAAUqB,OAEjD,8BACI,wBAAQE,KAAK,SAAb,uBCVGC,EAPM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAA8B,IAArBC,QAC7B,GAAe,MAAXD,EAAiB,OAAO,KAE5B,IAAIE,OAH8C,SAGxB,kBAAoB,gBAC9C,OAAO,qBAAKC,UAAWD,EAAhB,SAA4BF,K,gBCDjCI,EAAU,gBAmBD,EAjBO,WAClB,OAAOC,IAAMC,IAAIF,IAgBN,EAbQ,SAAC3B,GACpB,OAAO4B,IAAME,KAAKH,EAAS3B,IAYhB,EATa,SAACK,GACzB,OAAOuB,IAAMG,OAAN,UAAgBJ,GAAhB,OAA0BtB,KAQtB,EALO,SAACL,GACnB,OAAO4B,IAAMI,IAAN,UAAaL,GAAb,OAAuB3B,EAAOK,IAAML,ICsHhCiC,EA/HH,WACR,MAA8BC,mBAAS,IAAvC,mBAAO1B,EAAP,KAAgB2B,EAAhB,KAEAC,qBAAU,WACNC,IAAqBC,MAAK,SAACC,GACvBJ,EAAWI,EAASC,WAEzB,IAMH,MAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAkCR,mBAAS,gBAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAA4BV,mBAAS,IAArC,mBAAO3B,EAAP,KAAesC,EAAf,KACA,EAA8BX,mBAAS,CACnCX,QAAS,KACTC,SAAS,IAFb,mBAAOD,EAAP,KAAgBuB,EAAhB,KAwFA,OACI,gCACI,2CACA,cAAC,EAAD,eAAkBvB,IAClB,cAAC,EAAD,CAAQ3B,MAAOW,EAAQV,gBApBJ,SAACkD,GACxBF,EAAUE,EAAMC,OAAOpD,UAoBnB,kDACA,cAAC,EAAD,CACImB,gBA1FgB,SAACgC,GACzBA,EAAME,iBACN,IAAIjD,EAASQ,EAAQ0C,MAAK,SAAClD,GAAD,OAAYA,EAAOE,OAASuC,KAEtD,GAAMzC,GACF,GAAIA,EAAOG,SAAWwC,EAElBQ,MAAM,GAAD,OAAIV,EAAJ,uCAEL,GACIW,OAAOC,QAAP,UACOrD,EAAOE,KADd,gEAGF,CAEE,IAAIoD,EAAa,2BAAQtD,GAAR,IAAgBG,OAAQwC,IACzCN,EAAmBiB,GACdhB,MAAK,SAACC,GACHJ,EACI3B,EAAQK,KAAI,SAAC0C,GAAD,OACRA,EAAElD,KAAOkC,EAASC,KAAKnC,GACjBkC,EAASC,KACTe,SAIjBC,OAAM,SAACjB,GACJJ,EACI3B,EAAQE,QAAO,SAAC6C,GAAD,OAAOA,EAAElD,KAAOiD,EAAcjD,OAGjDyC,EAAW,CACPvB,QAAQ,kBAAD,OAAoB+B,EAAcpD,KAAlC,6BACPsB,SAAS,IAEbiC,YACI,kBAAMX,EAAW,2BAAKvB,GAAN,IAAeA,QAAS,UACxC,cAOpBc,EADkB,CAAEnC,KAAMuC,EAAStC,OAAQwC,IACVL,MAAK,SAACC,GACnCJ,EAAW3B,EAAQkD,OAAOnB,EAASC,OACnCE,EAAW,IACXI,EAAW,CACPvB,QAAQ,SAAD,OAAWgB,EAASC,KAAKtC,MAChCsB,SAAS,IAEbiC,YACI,kBAAMX,EAAW,2BAAKvB,GAAN,IAAeA,QAAS,UACxC,SAsCJP,UAAWyB,EACXxB,aAjCa,SAAC8B,GACtBL,EAAWK,EAAMC,OAAOpD,QAiChBsB,YAAayB,EACbxB,eA/Be,SAAC4B,GACxBH,EAAaG,EAAMC,OAAOpD,UAgCtB,yCACA,cAAC,EAAD,CACIW,OAAQA,EACRC,QAASA,EACTC,aA7BQ,SAACJ,GAEb+C,OAAOC,QAAP,iBACc7C,EAAQ0C,MAAK,SAAClD,GAAD,OAAYA,EAAOK,KAAOA,KAAIH,KADzD,OAIAmC,EAAyBhC,GAAIiC,MAAK,SAACC,GAC/BJ,EAAW3B,EAAQE,QAAO,SAACV,GAAD,OAAYA,EAAOK,KAAOA,gB,MCvGpEsD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.519ed125.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ value, onChangeHandler }) => {\n    return (\n        <div>\n            Filter names: <input value={value} onChange={onChangeHandler} />\n        </div>\n    );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Person = ({ person, deleteHandler }) => (\n    <div>\n        {person.name} {person.number}{\" \"}\n        <button onClick={() => deleteHandler(person.id)}>Delete</button>\n    </div>\n);\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ search, persons, deletePerson }) => {\n    return (\n        <div>\n            {persons\n                .filter((person) => {\n                    return person.name\n                        .toLowerCase()\n                        .includes(search.toLowerCase());\n                })\n                .map((person) => (\n                    <Person\n                        key={person.name}\n                        person={person}\n                        deleteHandler={deletePerson}\n                    />\n                ))}\n        </div>\n    );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Form = ({\n    onSumbitHandler,\n    nameValue,\n    onNameChange,\n    numberValue,\n    onNumberChange,\n}) => (\n    <form onSubmit={onSumbitHandler}>\n        <div>\n            name: <input value={nameValue} onChange={onNameChange} />\n        </div>\n        <div>\n            number: <input value={numberValue} onChange={onNumberChange} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n);\n\nexport default Form;\n","const Notification = ({ message, success = true }) => {\n    if (message == null) return null;\n\n    let classProp = success ? \"msg success-msg\" : \"msg error-msg\";\n    return <div className={classProp}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\n\n// const baseURL = \"http://localhost:3001/persons/\";\nconst baseURL = \"/api/persons/\";\n\nconst loadPhoneBook = () => {\n    return axios.get(baseURL);\n};\n\nconst addToPhoneBook = (person) => {\n    return axios.post(baseURL, person);\n};\n\nconst deleteFromPhoneBook = (id) => {\n    return axios.delete(`${baseURL}${id}`);\n};\n\nconst editPhoneBook = (person) => {\n    return axios.put(`${baseURL}${person.id}`, person);\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    loadPhoneBook,\n    addToPhoneBook,\n    deleteFromPhoneBook,\n    editPhoneBook,\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport Filter from \"./Filter\";\nimport Persons from \"./Persons\";\nimport Form from \"./Form\";\nimport Notification from \"./Notification\";\n\nimport rest from \"./services/REST\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n\n    useEffect(() => {\n        rest.loadPhoneBook().then((response) => {\n            setPersons(response.data);\n        });\n    }, []);\n    // { name: \"Arto Hellas\", number: \"040-123456\" },\n    // { name: \"Ada Lovelace\", number: \"39-44-5323523\" },\n    // { name: \"Dan Abramov\", number: \"12-43-234345\" },\n    // { name: \"Mary Poppendieck\", number: \"39-23-6423122\" },\n\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"123-456-7890\");\n    const [search, setSearch] = useState(\"\");\n    const [message, setMessage] = useState({\n        message: null,\n        success: true,\n    });\n\n    const handleNameAddButton = (event) => {\n        event.preventDefault();\n        let person = persons.find((person) => person.name === newName);\n\n        if (!!person) {\n            if (person.number === newNumber) {\n                // Same numbers\n                alert(`${newName} is already in the phonebook.`);\n            } else {\n                if (\n                    window.confirm(\n                        `${person.name} is already added to the phonebook, replace the old number?`\n                    )\n                ) {\n                    // PUT request\n                    let edittedPerson = { ...person, number: newNumber };\n                    rest.editPhoneBook(edittedPerson)\n                        .then((response) => {\n                            setPersons(\n                                persons.map((p) =>\n                                    p.id === response.data.id\n                                        ? response.data\n                                        : p\n                                )\n                            );\n                        })\n                        .catch((response) => {\n                            setPersons(\n                                persons.filter((p) => p.id !== edittedPerson.id)\n                            );\n\n                            setMessage({\n                                message: `Information of ${edittedPerson.name} has already been deleted`,\n                                success: false,\n                            });\n                            setTimeout(\n                                () => setMessage({ ...message, message: null }),\n                                3000\n                            );\n                        });\n                }\n            }\n        } else {\n            let personToAdd = { name: newName, number: newNumber };\n            rest.addToPhoneBook(personToAdd).then((response) => {\n                setPersons(persons.concat(response.data));\n                setNewName(\"\");\n                setMessage({\n                    message: `Added ${response.data.name}`,\n                    success: true,\n                });\n                setTimeout(\n                    () => setMessage({ ...message, message: null }),\n                    3000\n                );\n            });\n        }\n    };\n\n    const nameFieldUpdater = (event) => {\n        setNewName(event.target.value);\n    };\n\n    const numberFieldUpdater = (event) => {\n        setNewNumber(event.target.value);\n    };\n\n    const searchFieldUpdater = (event) => {\n        setSearch(event.target.value);\n    };\n\n    const deleteEntry = (id) => {\n        if (\n            window.confirm(\n                `Delete ${persons.find((person) => person.id === id).name}?`\n            )\n        ) {\n            rest.deleteFromPhoneBook(id).then((response) => {\n                setPersons(persons.filter((person) => person.id !== id));\n            });\n        }\n    };\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification {...message} />\n            <Filter value={search} onChangeHandler={searchFieldUpdater} />\n            <h2>Add a New Number</h2>\n            <Form\n                onSumbitHandler={handleNameAddButton}\n                nameValue={newName}\n                onNameChange={nameFieldUpdater}\n                numberValue={newNumber}\n                onNumberChange={numberFieldUpdater}\n            />\n            <h2>Numbers</h2>\n            <Persons\n                search={search}\n                persons={persons}\n                deletePerson={deleteEntry}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}